/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (7.13.0).
 * https://openapi-generator.tech
 * Do not edit the class manually.
*/
package com.inigo.fitmentor.coach.infrastructure.api.apis

import com.inigo.fitmentor.coach.infrastructure.api.models.CoachSaveRequest
import com.inigo.fitmentor.coach.infrastructure.api.models.CoachSaveResponse
import io.swagger.v3.oas.annotations.*
import io.swagger.v3.oas.annotations.enums.*
import io.swagger.v3.oas.annotations.media.*
import io.swagger.v3.oas.annotations.responses.*
import io.swagger.v3.oas.annotations.security.*
import org.springframework.http.HttpStatus
import org.springframework.http.MediaType
import org.springframework.http.ResponseEntity

import org.springframework.web.bind.annotation.*
import org.springframework.validation.annotation.Validated
import org.springframework.web.context.request.NativeWebRequest
import org.springframework.beans.factory.annotation.Autowired

import jakarta.validation.constraints.DecimalMax
import jakarta.validation.constraints.DecimalMin
import jakarta.validation.constraints.Email
import jakarta.validation.constraints.Max
import jakarta.validation.constraints.Min
import jakarta.validation.constraints.NotNull
import jakarta.validation.constraints.Pattern
import jakarta.validation.constraints.Size
import jakarta.validation.Valid

import kotlin.collections.List
import kotlin.collections.Map

@RestController
@Validated
interface DefaultApi {

    @Operation(
        tags = ["default",],
        summary = "Save coach",
        operationId = "userCoachesPut",
        description = """Saves coach""",
        responses = [
            ApiResponse(responseCode = "200", description = "Coach saved.", content = [Content(schema = Schema(implementation = CoachSaveResponse::class))]),
            ApiResponse(responseCode = "400", description = "Invalid Request."),
            ApiResponse(responseCode = "500", description = "Server error.")
        ]
    )
    @RequestMapping(
            method = [RequestMethod.PUT],
            value = ["/user/coaches"],
            produces = ["application/json"],
            consumes = ["application/json"]
    )
    fun saveCoach(@Parameter(description = "", required = true) @Valid @RequestBody coachSaveRequest: CoachSaveRequest): ResponseEntity<CoachSaveResponse>
}
